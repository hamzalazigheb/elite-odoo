
        stage('Create SonarQube Project') {
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        def projectName = params.SONAR_PROJECT_NAME ?: 'AutoGeneratedProject'
                        def projectKey = projectName.replaceAll('[^a-zA-Z0-9]', '_')

                        // Use SonarQube Web API to create a new project
                        // You'll need to authenticate and construct the appropriate API call
                        sh "curl -X POST -u admin:12341234 'https://22d8-196-179-220-246.ngrok-free.app/api/projects/create?name=${projectName}&project=${projectKey}'"

                        env.SONAR_PROJECT_KEY = projectKey
                    }
                }
            }
        }

        stage('Run SonarQube Analysis') {
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        // Retrieve SonarScanner tool
                        def scannerHome = tool 'sonar-server'

                        // Run SonarQube analysis
                        withSonarQubeEnv('sonarqube-server') {
                            sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=${env.SONAR_PROJECT_KEY}"
                        }
                    }
                }
            }
        }
